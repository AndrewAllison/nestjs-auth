var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.476,1,2.097]],["body/classes/AllExceptionsFilter.html",[0,0.376,1,2.408,2,2.356,3,0.376,4,0.327,5,0.327,6,3.314,7,1.934,8,2.812,9,4.037,10,0.427,11,1.665,12,4.432,13,1.656,14,2.356,15,2.154,16,1.665,17,2.356,18,1.665,19,0.041,20,1.493,21,0.787,22,1.493,23,2.408,24,3.426,25,2.838,26,4.432,27,2.356,28,5.071,29,1.145,30,0.88,31,3.426,32,1.934,33,0.541,34,1.934,35,0.376,36,2.356,37,2.356,38,2.356,39,2.675,40,4.037,41,2.356,42,2.356,43,2.356,44,2.356,45,2.356,46,2.356,47,3.314,48,2.356,49,2.356,50,2.356,51,2.356,52,2.356,53,3.426,54,2.356,55,2.356,56,2.356,57,2.356,58,2.356,59,2.356,60,2.356,61,2.356,62,1.934,63,3.426,64,2.356,65,2.356,66,2.356,67,1.934,68,1.934,69,2.356,70,1.145,71,2.356,72,2.356,73,2.356,74,2.356,75,2.356,76,0.016,77,0.023,78,0.016]],["title/controllers/AppController.html",[79,1.834,80,1.834]],["body/controllers/AppController.html",[0,0.467,3,0.467,4,0.407,5,0.407,10,0.532,11,1.942,16,1.942,18,1.425,19,0.041,20,1.278,21,0.674,22,1.278,29,1.942,30,1.167,32,2.407,33,0.674,35,0.467,70,1.942,76,0.02,77,0.027,78,0.02,79,2.457,80,2.457,81,2.407,82,2.407,83,4.883,84,3.997,85,3.997,86,2.932,87,2.932,88,2.932,89,1.914,90,2.932,91,4.195,92,3.281,93,2.457,94,3.997,95,3.997,96,2.932,97,2.407,98,2.932,99,1.803,100,2.407,101,2.932,102,2.932,103,2.932,104,2.932,105,2.061,106,2.932,107,2.932,108,2.932]],["title/modules/AppModule.html",[109,0.766,110,1.834]],["body/modules/AppModule.html",[0,0.522,3,0.522,4,0.454,5,0.454,19,0.04,30,1.311,33,0.752,35,0.522,76,0.022,77,0.029,78,0.022,80,2.955,81,3.532,109,1.104,110,3.462,111,1.155,112,1.686,113,2.687,114,2.687,115,2.645,116,2.964,117,2.091,118,1.59,119,1.59,120,3.273,121,2.343,122,3.273,123,3.273,124,2.687,125,1.59]],["title/modules/ConfigModule.html",[109,0.766,126,1.45]],["body/modules/ConfigModule.html",[0,0.576,3,0.576,4,0.501,5,0.501,19,0.04,30,1.36,33,0.83,35,0.576,76,0.025,77,0.031,78,0.025,109,1.177,111,1.275,121,1.967,126,2.448,127,3.612,128,3.612,129,2.539,130,3.223,131,3.612,132,4.585,133,3.612,134,3.612,135,3.612,136,3.612,137,3.612,138,3.764,139,3.612,140,3.612]],["title/modules/CoreModule.html",[109,0.766,115,1.45]],["body/modules/CoreModule.html",[0,0.462,3,0.462,4,0.402,5,0.402,19,0.04,30,1.247,33,0.666,35,0.462,76,0.02,77,0.027,78,0.02,109,1.018,111,1.022,112,1.554,115,2.799,117,1.926,118,1.408,119,1.408,121,2.159,126,2.78,141,2.378,142,2.378,143,2.378,144,3.115,145,3.115,146,2.897,147,2.787,148,2.897,149,2.897,150,2.897]],["title/modules/DataModule.html",[109,0.766,144,1.625]],["body/modules/DataModule.html",[0,0.554,3,0.554,4,0.482,5,0.482,19,0.04,30,1.148,33,0.798,35,0.554,76,0.024,77,0.03,78,0.024,109,1.148,111,1.226,112,1.753,117,2.174,118,1.689,119,1.689,125,2.174,144,3.064,147,3.144,151,2.853,152,2.853,153,2.853,154,2.858,155,3.475,156,3.475]],["title/interfaces/DatabaseConfig.html",[157,1.053,158,2.097]],["body/interfaces/DatabaseConfig.html",[3,0.539,4,0.469,5,0.469,10,0.613,19,0.039,21,1.316,25,3.633,35,0.539,76,0.023,77,0.03,78,0.023,89,2.296,157,1.192,158,3.088,159,1.84,160,2.774,161,2.392,162,4.242,163,4.242,164,3.178,165,3.431]],["title/interfaces/EnvConfig.html",[157,1.053,166,2.097]],["body/interfaces/EnvConfig.html",[3,0.587,4,0.511,5,0.511,10,0.668,19,0.039,21,1.168,35,0.587,76,0.025,77,0.032,78,0.025,89,2.202,92,4.382,93,3.282,157,1.301,159,2.006,161,2.528,164,3.282,165,3.574,166,3.264,167,3.025]],["title/interfaces/LogConfig.html",[157,1.053,168,1.834]],["body/interfaces/LogConfig.html",[3,0.562,4,0.489,5,0.489,10,0.639,19,0.039,21,1.207,35,0.562,76,0.024,77,0.031,78,0.024,89,2.263,157,1.244,159,1.919,161,2.458,168,2.776,169,2.894,170,4.311,171,3.692,172,5.251,173,5.251,174,4.98]],["title/modules/LogModule.html",[109,0.766,145,1.625]],["body/modules/LogModule.html",[0,0.42,3,0.42,4,0.366,5,0.366,15,2.735,19,0.041,30,1.31,33,0.606,34,2.164,35,0.42,39,2.022,70,1.281,76,0.018,77,0.025,78,0.018,99,1.621,109,0.953,111,0.93,112,1.455,117,1.804,118,1.281,119,1.281,121,2.022,125,1.804,126,1.804,129,1.853,145,2.854,147,2.61,168,2.283,170,2.164,171,1.853,175,2.164,176,2.164,177,2.164,178,2.636,179,4.298,180,2.636,181,2.61,182,3.048,183,2.164,184,2.636,185,2.636,186,2.636,187,2.636,188,1.621,189,2.164,190,2.636,191,3.048,192,2.164,193,2.636,194,2.164,195,2.636,196,2.164,197,2.164,198,2.164,199,2.636,200,2.636]],["title/injectables/LogService.html",[15,1.45,201,1.053]],["body/injectables/LogService.html",[0,0.524,3,0.524,4,0.456,5,0.456,10,0.596,11,2.097,13,2.311,15,2.097,16,2.097,18,2.097,19,0.04,20,2.099,21,0.755,22,1.88,29,1.598,30,1.108,33,0.755,35,0.524,68,2.699,76,0.022,77,0.029,78,0.022,99,2.021,181,2.311,201,1.523,202,1.79,203,2.699,204,3.542,205,3.954,206,4.315,207,4.315,208,3.287,209,4.315,210,5.114,211,3.287,212,3.287,213,3.287,214,3.287]],["title/injectables/PasswordService.html",[201,1.053,215,1.45]],["body/injectables/PasswordService.html",[0,0.28,3,0.28,4,0.244,5,0.244,10,0.318,11,1.334,16,1.856,18,1.642,19,0.041,20,1.472,21,0.631,22,1.196,29,1.334,30,0.98,33,0.404,35,0.28,39,2.256,70,2.014,76,0.012,77,0.019,78,0.012,89,1.624,161,1.495,165,3.338,201,0.969,202,0.956,215,1.334,216,1.442,217,1.929,218,2.745,219,2.745,220,2.745,221,2.745,222,3.819,223,1.929,224,2.745,225,2.745,226,2.773,227,2.773,228,2.253,229,2.745,230,2.745,231,1.756,232,2.745,233,2.745,234,2.745,235,2.745,236,2.745,237,2.745,238,2.745,239,2.745,240,1.756,241,3.819,242,2.253,243,1.929,244,1.756,245,2.745,246,3.088,247,3.088,248,3.338,249,1.756,250,1.756,251,1.442,252,2.745,253,2.745,254,1.756,255,1.756,256,2.745,257,1.756,258,1.756,259,3.378,260,2.253,261,2.745,262,3.819,263,1.756,264,1.756,265,1.756,266,1.756,267,1.756,268,1.756,269,1.756,270,1.756,271,4.392,272,1.756,273,1.756,274,2.745,275,1.756,276,1.756,277,1.756,278,1.756]],["title/injectables/PrismaService.html",[154,1.45,201,1.053]],["body/injectables/PrismaService.html",[0,0.477,3,0.477,4,0.415,5,0.415,8,2.456,10,0.542,11,1.969,16,1.969,18,1.454,19,0.04,20,1.304,21,0.687,22,1.304,29,1.969,30,1.04,33,0.687,35,0.477,76,0.02,77,0.028,78,0.02,154,1.969,188,3.336,201,1.43,202,1.629,204,3.326,279,2.456,280,4.595,281,4.052,282,5.305,283,4.052,284,4.043,285,2.992,286,2.103,287,2.992,288,2.456,289,2.848,290,2.992,291,2.992,292,2.992,293,2.992,294,2.992,295,2.456,296,2.992,297,2.992,298,2.992,299,2.992,300,2.992]],["title/modules/UserModule.html",[109,0.766,116,1.625]],["body/modules/UserModule.html",[0,0.51,3,0.51,4,0.444,5,0.444,19,0.04,30,1.299,33,0.735,35,0.51,76,0.022,77,0.029,78,0.022,109,1.088,111,1.13,112,1.662,115,2.629,116,3.118,117,2.06,118,1.556,119,1.556,121,2.309,124,2.628,125,2.06,215,2.629,301,2.628,302,3.201,303,2.628,304,2.946,305,3.201,306,3.201,307,2.628]],["title/interfaces/UserRegisterInput.html",[157,1.053,308,1.834]],["body/interfaces/UserRegisterInput.html",[3,0.467,4,0.407,5,0.407,10,0.532,19,0.039,21,1.262,22,2.394,35,0.467,76,0.02,77,0.027,78,0.02,89,2.333,157,1.035,159,1.596,161,2.176,248,3.433,308,2.457,309,2.407,310,2.407,311,4.009,312,3.433,313,4.009,314,4.009,315,4.009,316,4.009,317,4.009]],["title/injectables/UserService.html",[201,1.053,304,1.625]],["body/injectables/UserService.html",[0,0.265,3,0.265,4,0.231,5,0.231,10,0.302,11,1.279,13,1.85,16,1.802,18,1.802,19,0.041,20,1.76,21,0.928,22,1.616,29,1.586,30,1.102,33,0.382,35,0.52,39,2.338,70,1.962,76,0.011,77,0.018,78,0.011,89,1.762,125,1.279,154,1.802,188,2.006,201,0.929,202,0.906,215,1.802,246,1.85,247,1.85,248,2.294,289,1.17,304,1.433,307,1.366,308,2.28,311,2.678,312,3.161,313,2.16,314,2.678,315,2.16,316,3.315,317,3.525,318,1.023,319,3.263,320,2.631,321,3.263,322,3.263,323,1.664,324,3.263,325,1.664,326,2.631,327,1.664,328,3.691,329,1.664,330,4.293,331,3.263,332,2.631,333,1.664,334,1.664,335,1.664,336,1.664,337,1.664,338,3.263,339,1.664,340,1.664,341,1.664,342,1.664,343,1.17,344,2.16,345,2.631,346,2.631,347,2.631,348,2.631,349,2.631,350,1.664,351,1.664,352,1.366,353,1.664,354,1.664,355,1.664,356,1.664,357,1.664,358,1.664,359,1.664,360,1.664,361,1.664,362,1.664,363,1.664,364,1.366,365,1.664,366,1.664,367,2.631,368,2.631,369,1.664]],["title/coverage.html",[370,2.843]],["body/coverage.html",[0,0.347,1,1.528,5,0.302,6,1.785,7,1.785,15,1.056,19,0.04,21,0.499,23,1.528,62,1.785,76,0.015,77,0.022,78,0.015,79,1.337,80,1.337,82,1.785,93,1.337,105,1.528,130,1.528,154,1.056,157,1.505,158,1.528,160,1.785,164,1.337,166,1.528,167,1.785,168,1.337,169,1.785,201,1.505,203,1.785,215,1.056,216,1.785,279,1.785,304,1.184,308,1.337,309,1.785,310,1.785,318,1.986,343,1.528,364,4.803,370,1.528,371,2.174,372,2.174,373,2.174,374,1.785,375,3.74,376,5.614,377,1.785,378,5.649,379,3.163,380,1.785,381,1.785,382,1.785,383,1.785,384,1.785,385,4.264,386,1.785,387,2.651,388,1.785,389,1.785,390,1.785,391,2.174,392,2.174,393,3.229,394,1.785,395,1.785,396,3.475,397,1.785,398,1.785,399,1.785,400,1.785,401,2.174,402,2.174,403,2.174,404,2.174,405,2.174]],["title/dependencies.html",[112,1.403,406,2.505]],["body/dependencies.html",[0,0.68,19,0.041,33,0.742,76,0.022,77,0.029,78,0.022,91,2.651,97,2.651,99,2.622,100,2.651,112,1.266,129,2.27,181,2.998,183,2.651,251,2.651,288,2.651,407,4.774,408,3.229,409,3.229,410,3.229,411,4.264,412,3.229,413,3.229,414,4.264,415,3.229,416,3.229,417,3.229,418,3.229,419,3.229,420,3.229,421,3.229,422,3.229,423,3.229,424,3.229,425,3.229,426,3.229,427,3.229,428,3.229,429,3.229,430,3.229,431,3.229,432,3.229,433,3.229,434,3.229,435,3.229,436,3.229,437,3.229]],["title/miscellaneous/enumerations.html",[438,0.982,439,2.939]],["body/miscellaneous/enumerations.html",[10,0.735,19,0.039,76,0.028,77,0.034,78,0.028,125,2.393,243,3.88,312,2.849,438,1.588,439,3.327,440,4.052,441,4.052,442,4.052,443,4.925,444,4.925,445,4.043]],["title/miscellaneous/functions.html",[223,2.517,438,0.982]],["body/miscellaneous/functions.html",[10,0.801,19,0.035,76,0.03,77,0.035,78,0.03,223,3.107,396,3.107,397,4.519,438,1.732,446,3.628]],["title/index.html",[10,0.454,447,2.505,448,2.505]],["body/index.html",[4,0.407,19,0.04,67,2.407,76,0.02,77,0.027,78,0.02,217,2.061,286,2.061,295,2.407,370,2.061,445,2.407,449,2.932,450,2.932,451,3.997,452,2.932,453,2.932,454,2.932,455,2.932,456,2.932,457,4.547,458,2.932,459,2.932,460,2.932,461,5.396,462,2.932,463,2.932,464,5.273,465,2.932,466,2.932,467,3.997,468,2.932,469,2.407,470,2.932,471,2.932,472,3.997,473,3.281,474,2.932,475,2.932,476,2.932,477,3.997,478,3.997,479,2.932,480,2.932,481,2.932,482,2.932,483,2.932,484,2.407,485,2.932,486,2.932,487,2.932,488,2.932,489,2.932,490,2.932,491,2.932,492,2.932,493,2.932,494,2.932,495,2.932,496,2.932,497,2.932,498,2.932,499,2.932,500,2.932,501,2.932]],["title/modules.html",[111,1.427]],["body/modules.html",[19,0.033,76,0.027,77,0.033,78,0.027,110,2.399,111,1.377,115,1.896,116,2.124,126,1.896,144,2.124,145,2.124,484,4.593,502,5.595,503,5.595,504,5.698,505,3.901,506,3.901]],["title/overview.html",[507,3.32]],["body/overview.html",[0,0.42,15,2.547,19,0.04,76,0.018,77,0.025,78,0.018,79,1.621,110,3.137,111,0.93,112,1.455,113,2.164,114,2.164,115,2.757,116,2.963,117,1.804,118,1.281,119,1.281,126,2.547,141,2.164,142,2.164,143,2.164,144,3.003,145,3.003,151,2.164,152,2.164,153,2.164,154,2.547,159,1.435,175,2.164,176,2.164,177,2.164,202,1.435,215,2.089,260,3.048,301,2.164,303,2.164,304,2.34,507,2.164,508,2.636,509,3.713]],["title/miscellaneous/typealiases.html",[438,0.982,510,3.581]],["body/miscellaneous/typealiases.html",[10,0.792,19,0.035,21,1.183,76,0.03,77,0.035,78,0.03,318,2.685,328,4.228,438,1.711,511,4.367,512,3.585,513,4.367]],["title/miscellaneous/variables.html",[438,0.982,514,2.939]],["body/miscellaneous/variables.html",[10,0.283,19,0.041,20,1.361,21,1.046,23,2.196,25,1.755,39,2.557,47,1.279,70,1.736,76,0.011,77,0.017,78,0.011,89,1.224,93,1.535,105,1.755,130,1.755,138,1.279,162,2.049,163,2.049,164,2.403,171,2.196,182,1.279,188,0.958,189,2.049,191,2.049,192,1.279,194,1.279,196,1.279,197,1.279,198,1.279,205,1.279,217,1.095,226,1.279,227,1.279,228,1.279,242,4.114,243,3.523,246,1.755,247,1.755,284,2.049,286,2.196,289,1.095,318,0.958,343,1.755,344,2.049,352,1.279,374,1.279,375,3.737,377,2.049,379,1.279,380,2.932,381,2.932,382,2.049,383,1.279,384,2.049,386,1.279,387,2.932,388,2.564,389,1.279,390,1.279,394,1.279,395,2.049,396,1.095,398,2.049,399,2.049,400,2.049,438,0.611,446,3.424,469,1.279,473,1.279,512,1.279,514,1.279,515,1.558,516,2.496,517,3.123,518,1.558,519,1.558,520,1.558,521,1.558,522,1.558,523,1.558,524,1.558,525,1.558,526,1.558,527,1.558,528,2.496,529,1.558,530,1.558,531,1.558,532,1.558,533,1.558,534,1.558,535,1.558,536,1.558,537,1.558,538,1.558,539,2.496,540,1.558,541,1.558,542,1.558,543,1.558,544,1.558,545,1.558,546,1.558,547,1.558,548,1.558,549,1.558,550,1.558,551,1.558,552,3.123,553,2.496,554,4.381,555,1.558,556,1.558,557,1.558,558,1.558,559,1.558,560,1.558,561,1.558,562,1.558,563,1.558,564,1.558,565,1.558,566,1.558,567,1.558,568,1.558,569,1.558,570,1.558,571,1.558,572,1.558]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":364,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":260,"title":{},"body":{"injectables/PasswordService.html":{},"overview.html":{}}}],["1.0.1",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":275,"title":{},"body":{"injectables/PasswordService.html":{}}}],["12",{"_index":261,"title":{},"body":{"injectables/PasswordService.html":{}}}],["12345678907654regfhytre",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.4.2",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["2134567uytrgewq3456",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":509,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["5.0.9",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["6",{"_index":508,"title":{},"body":{"overview.html":{}}}],["60",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["abortearly",{"_index":140,"title":{},"body":{"modules/ConfigModule.html":{}}}],["add",{"_index":259,"title":{},"body":{"injectables/PasswordService.html":{}}}],["aliases",{"_index":511,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":485,"title":{},"body":{"index.html":{}}}],["any).contexttype",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["any).response",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["any)?.args?.length]?.fieldname",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["any)?.args[(ctx",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["api",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiexcludeendpoint",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["apiexcludeendpoint()@get('/favicon.ico",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["apikey",{"_index":194,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('app",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":286,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":300,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["app.resolve(logservice",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.uselogger(logger",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":80,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":456,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":110,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appurl",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":188,"title":{},"body":{"modules/LogModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":225,"title":{},"body":{"injectables/PasswordService.html":{}}}],["author",{"_index":495,"title":{},"body":{"index.html":{}}}],["auto_logging",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autologging",{"_index":170,"title":{},"body":{"interfaces/LogConfig.html":{},"modules/LogModule.html":{}}}],["available",{"_index":506,"title":{},"body":{"modules.html":{}}}],["await",{"_index":289,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":486,"title":{},"body":{"index.html":{}}}],["basically",{"_index":276,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcrypt",{"_index":250,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcrypt.comparesync(`${password}${salt",{"_index":257,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcrypt.gensaltsync(10",{"_index":254,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcrypt.hashsync(`${password}${salt",{"_index":255,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcryptjs",{"_index":251,"title":{},"body":{"injectables/PasswordService.html":{},"dependencies.html":{}}}],["boolean",{"_index":174,"title":{},"body":{"interfaces/LogConfig.html":{}}}],["bootstrap",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":504,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":502,"title":{},"body":{"modules.html":{}}}],["build",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":452,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":235,"title":{},"body":{"injectables/PasswordService.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cli",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":141,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":143,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":142,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":151,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":152,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":153,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_logmodule",{"_index":175,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_exports",{"_index":177,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_providers",{"_index":176,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":301,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":302,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":303,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":189,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["config.get('logging",{"_index":190,"title":{},"body":{"modules/LogModule.html":{}}}],["config.scheme",{"_index":131,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":148,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/models/log.config",{"_index":184,"title":{},"body":{"modules/LogModule.html":{}}}],["configmodule",{"_index":126,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":179,"title":{},"body":{"modules/LogModule.html":{}}}],["configuration",{"_index":132,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configurelogger",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configureswaggerdocumentation",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/LogModule.html":{},"injectables/PasswordService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["constructor(logger",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(name",{"_index":207,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(prisma",{"_index":323,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["controller",{"_index":79,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["core/core.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["core/data/prisma/prisma.service",{"_index":339,"title":{},"body":{"injectables/UserService.html":{}}}],["coremodule",{"_index":115,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":370,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":352,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["createdata",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["createdata.password",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["createdata.providers.create.push(providerdetails",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["createmany",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpasswordhash",{"_index":226,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["createproviderdetails",{"_index":319,"title":{},"body":{"injectables/UserService.html":{}}}],["createproviderdetails(undefined",{"_index":327,"title":{},"body":{"injectables/UserService.html":{}}}],["createrandomcode",{"_index":228,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["createrandomcode(size",{"_index":230,"title":{},"body":{"injectables/PasswordService.html":{}}}],["createrandomdigits",{"_index":229,"title":{},"body":{"injectables/PasswordService.html":{}}}],["createrandomdigits(digits",{"_index":239,"title":{},"body":{"injectables/PasswordService.html":{}}}],["creates",{"_index":245,"title":{},"body":{"injectables/PasswordService.html":{}}}],["createstream",{"_index":182,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["crypto",{"_index":222,"title":{},"body":{"injectables/PasswordService.html":{}}}],["ctx",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":368,"title":{},"body":{"injectables/UserService.html":{}}}],["customoptions",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customsitetitle",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["data/data.module",{"_index":150,"title":{},"body":{"modules/CoreModule.html":{}}}],["database",{"_index":162,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":158,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["databaseurl",{"_index":163,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["databaseurl.split(':')[0",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseurl.split(':')[2].split('@')[1",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseurl.split(':')[3].split('/')[0",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseurl.split(':')[3].split('/')[1].split('?')[0",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamodule",{"_index":144,"title":{"modules/DataModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["date().toisostring",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["date.now",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dealing",{"_index":219,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decorators",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":242,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["default('local",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_roles",{"_index":343,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_roles).reduce",{"_index":366,"title":{},"body":{"injectables/UserService.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":217,"title":{},"body":{"injectables/PasswordService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["determinerolestoadd",{"_index":320,"title":{},"body":{"injectables/UserService.html":{}}}],["determinerolestoadd(roles",{"_index":332,"title":{},"body":{"injectables/UserService.html":{}}}],["development",{"_index":463,"title":{},"body":{"index.html":{}}}],["digits",{"_index":241,"title":{},"body":{"injectables/PasswordService.html":{}}}],["disable",{"_index":292,"title":{},"body":{"injectables/PrismaService.html":{}}}],["displayname",{"_index":311,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["document",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":474,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":453,"title":{},"body":{"index.html":{}}}],["email",{"_index":312,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["email.trim().tolowercase",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["emailandpassword",{"_index":442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enableshutdownhooks",{"_index":281,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":283,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":269,"title":{},"body":{"injectables/PasswordService.html":{}}}],["enumerations",{"_index":439,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envconfig",{"_index":166,"title":{"interfaces/EnvConfig.html":{}},"body":{"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["error",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["errorobject",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["eslint",{"_index":291,"title":{},"body":{"injectables/PrismaService.html":{}}}],["eslint/no",{"_index":296,"title":{},"body":{"injectables/PrismaService.html":{}}}],["exception",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:11",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:16",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{}}}],["express",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":204,"title":{},"body":{"injectables/LogService.html":{},"injectables/PrismaService.html":{}}}],["facebook",{"_index":443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firstname",{"_index":313,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["firstname.trim",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":451,"title":{},"body":{"index.html":{}}}],["function",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["functions",{"_index":223,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/PasswordService.html":{},"miscellaneous/functions.html":{}}}],["general",{"_index":221,"title":{},"body":{"injectables/PasswordService.html":{}}}],["generate",{"_index":265,"title":{},"body":{"injectables/PasswordService.html":{}}}],["generates",{"_index":232,"title":{},"body":{"injectables/PasswordService.html":{}}}],["get('/favicon.ico",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["getdatabasedetails",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfavicon",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(@realip",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(ip",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["getpinologger",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":447,"title":{"index.html":{}},"body":{}}],["google",{"_index":444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":505,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["graphqlmethod",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["grow",{"_index":481,"title":{},"body":{"index.html":{}}}],["hash",{"_index":246,"title":{},"body":{"injectables/PasswordService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":256,"title":{},"body":{"injectables/PasswordService.html":{}}}],["hasvalidroles",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["hasvalidroles(roles",{"_index":365,"title":{},"body":{"injectables/UserService.html":{}}}],["here",{"_index":492,"title":{},"body":{"index.html":{}}}],["host",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception).message",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":499,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{}}}],["httpstatus.internal_server_error",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":314,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":284,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":186,"title":{},"body":{"modules/LogModule.html":{}}}],["injectable",{"_index":201,"title":{"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":202,"title":{},"body":{"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":460,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":462,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":157,"title":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"interfaces/UserRegisterInput.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"interfaces/UserRegisterInput.html":{},"coverage.html":{}}}],["interfaces",{"_index":159,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"interfaces/UserRegisterInput.html":{},"overview.html":{}}}],["ip",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["isglobal",{"_index":137,"title":{},"body":{"modules/ConfigModule.html":{}}}],["jest.fn",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["joi.boolean().default(true",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(80",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('http://localhost:5341",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('trace",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":488,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":496,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":315,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["lastname.trim",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["length",{"_index":237,"title":{},"body":{"injectables/PasswordService.html":{}}}],["level",{"_index":171,"title":{},"body":{"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":501,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":478,"title":{},"body":{"index.html":{}}}],["line",{"_index":294,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":135,"title":{},"body":{"modules/ConfigModule.html":{}}}],["local",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":206,"title":{},"body":{"injectables/LogService.html":{}}}],["log(message",{"_index":209,"title":{},"body":{"injectables/LogService.html":{}}}],["log.service",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/LogModule.html":{}}}],["log/log.module",{"_index":149,"title":{},"body":{"modules/CoreModule.html":{}}}],["log_level",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logconfig",{"_index":168,"title":{"interfaces/LogConfig.html":{}},"body":{"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"coverage.html":{}}}],["logconfig.autologging",{"_index":200,"title":{},"body":{"modules/LogModule.html":{}}}],["logconfig.level",{"_index":199,"title":{},"body":{"modules/LogModule.html":{}}}],["logconfig.seqapikey",{"_index":195,"title":{},"body":{"modules/LogModule.html":{}}}],["logconfig.seqserverurl",{"_index":193,"title":{},"body":{"modules/LogModule.html":{}}}],["logger",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.setcontext('nestjs",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":180,"title":{},"body":{"modules/LogModule.html":{}}}],["loggermodule.forrootasync",{"_index":185,"title":{},"body":{"modules/LogModule.html":{}}}],["logmodule",{"_index":145,"title":{"modules/LogModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["logotheras",{"_index":196,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["logservice",{"_index":15,"title":{"injectables/LogService.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":277,"title":{},"body":{"injectables/PasswordService.html":{}}}],["math.pow(10",{"_index":274,"title":{},"body":{"injectables/PasswordService.html":{}}}],["math.random",{"_index":264,"title":{},"body":{"injectables/PasswordService.html":{}}}],["max",{"_index":271,"title":{},"body":{"injectables/PasswordService.html":{}}}],["message",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LogService.html":{}}}],["metadata",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":262,"title":{},"body":{"injectables/PasswordService.html":{}}}],["miscellaneous",{"_index":438,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":477,"title":{},"body":{"index.html":{}}}],["mockedhashvalue",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedsalt",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocklogservice",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockpasswordservice",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockprismaservice",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":467,"title":{},"body":{"index.html":{}}}],["models/configuration",{"_index":133,"title":{},"body":{"modules/ConfigModule.html":{}}}],["models/provider.types",{"_index":340,"title":{},"body":{"injectables/UserService.html":{}}}],["models/user",{"_index":341,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":109,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":111,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":491,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":497,"title":{},"body":{"index.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":457,"title":{},"body":{"index.html":{}}}],["nestconfigmodule",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestconfigmodule.forroot",{"_index":134,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestframework",{"_index":500,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":129,"title":{},"body":{"modules/ConfigModule.html":{},"modules/LogModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":293,"title":{},"body":{"injectables/PrismaService.html":{}}}],["node.js",{"_index":450,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":461,"title":{},"body":{"index.html":{}}}],["number",{"_index":165,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"injectables/PasswordService.html":{}}}],["number).substring(add",{"_index":278,"title":{},"body":{"injectables/PasswordService.html":{}}}],["object",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":282,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":479,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["optionalparams",{"_index":210,"title":{},"body":{"injectables/LogService.html":{}}}],["origin",{"_index":316,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["origin.trim",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":507,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":406,"title":{"dependencies.html":{}},"body":{}}],["packagedetails",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pad",{"_index":268,"title":{},"body":{"injectables/PasswordService.html":{}}}],["param",{"_index":253,"title":{},"body":{"injectables/PasswordService.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["params",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.title",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":248,"title":{},"body":{"injectables/PasswordService.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["password.service",{"_index":307,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["passwordhelper",{"_index":324,"title":{},"body":{"injectables/UserService.html":{}}}],["passwords",{"_index":220,"title":{},"body":{"injectables/PasswordService.html":{}}}],["passwordservice",{"_index":215,"title":{"injectables/PasswordService.html":{}},"body":{"injectables/PasswordService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["pathname",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["persistauthorization",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":181,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":198,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":205,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":489,"title":{},"body":{"index.html":{}}}],["port",{"_index":164,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["previouse",{"_index":367,"title":{},"body":{"injectables/UserService.html":{}}}],["previouse.push",{"_index":369,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma",{"_index":326,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":288,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":156,"title":{},"body":{"modules/DataModule.html":{}}}],["prismaclient",{"_index":280,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":154,"title":{"injectables/PrismaService.html":{}},"body":{"modules/DataModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.database_url",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.npm_package_version",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.seq_api_key",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.seq_server_url",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":469,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":449,"title":{},"body":{"index.html":{}}}],["project",{"_index":480,"title":{},"body":{"index.html":{}}}],["properties",{"_index":161,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"injectables/PasswordService.html":{},"interfaces/UserRegisterInput.html":{}}}],["provider",{"_index":331,"title":{},"body":{"injectables/UserService.html":{}}}],["providerdetails",{"_index":328,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["providers.email",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":321,"title":{},"body":{"injectables/UserService.html":{}}}],["random",{"_index":234,"title":{},"body":{"injectables/PasswordService.html":{}}}],["randombytes",{"_index":252,"title":{},"body":{"injectables/PasswordService.html":{}}}],["randombytes(size).tostring('hex",{"_index":258,"title":{},"body":{"injectables/PasswordService.html":{}}}],["read",{"_index":490,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["real",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["realip",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":322,"title":{},"body":{"injectables/UserService.html":{}}}],["register(undefined",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["register.input",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["register.input.ts",{"_index":310,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"coverage.html":{}}}],["relating",{"_index":224,"title":{},"body":{"injectables/PasswordService.html":{}}}],["repository",{"_index":459,"title":{},"body":{"index.html":{}}}],["request",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request?.url",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.status",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.status(status).json",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/LogModule.html":{},"injectables/PasswordService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":317,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{}}}],["roles.length",{"_index":363,"title":{},"body":{"injectables/UserService.html":{}}}],["run",{"_index":464,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":263,"title":{},"body":{"injectables/PasswordService.html":{}}}],["salt",{"_index":247,"title":{},"body":{"injectables/PasswordService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":454,"title":{},"body":{"index.html":{}}}],["seq",{"_index":183,"title":{},"body":{"modules/LogModule.html":{},"dependencies.html":{}}}],["seq_api_key",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seq_server_url",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seqapikey",{"_index":172,"title":{},"body":{"interfaces/LogConfig.html":{}}}],["seqserverurl",{"_index":173,"title":{},"body":{"interfaces/LogConfig.html":{}}}],["seqstream",{"_index":191,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["serverurl",{"_index":192,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":218,"title":{},"body":{"injectables/PasswordService.html":{}}}],["service.mock.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":233,"title":{},"body":{"injectables/PasswordService.html":{}}}],["setcontext",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription(params.description",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(packagedetails.name",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(packagedetails.version",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":455,"title":{},"body":{"index.html":{}}}],["size",{"_index":238,"title":{},"body":{"injectables/PasswordService.html":{}}}],["social",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specified",{"_index":236,"title":{},"body":{"injectables/PasswordService.html":{}}}],["sponsors",{"_index":483,"title":{},"body":{"index.html":{}}}],["src/.../config",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.scheme.ts",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configuration.ts",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prisma",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../provider.types.ts",{"_index":440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.service.ts",{"_index":512,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/__testing__/mocks/log",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/__testing__/mocks/password",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/__testing__/mocks/prisma",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:20",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/core/config/config",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/config.module.ts",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/core/config/config.scheme.ts",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/models/configuration.ts",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/models/database.config.ts",{"_index":160,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["src/core/config/models/env.config.ts",{"_index":167,"title":{},"body":{"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/core/config/models/log.config.ts",{"_index":169,"title":{},"body":{"interfaces/LogConfig.html":{},"coverage.html":{}}}],["src/core/core.module.ts",{"_index":146,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/data/data.module.ts",{"_index":155,"title":{},"body":{"modules/DataModule.html":{}}}],["src/core/data/prisma/prisma.service.ts",{"_index":279,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/core/data/prisma/prisma.service.ts:10",{"_index":285,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/core/data/prisma/prisma.service.ts:6",{"_index":287,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/core/log/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/core/log/log",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/log/log.module.ts",{"_index":178,"title":{},"body":{"modules/LogModule.html":{}}}],["src/core/log/log.service.ts",{"_index":203,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/core/log/log.service.ts:5",{"_index":208,"title":{},"body":{"injectables/LogService.html":{}}}],["src/core/log/log.service.ts:9",{"_index":211,"title":{},"body":{"injectables/LogService.html":{}}}],["src/main.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/user/models/provider.types.ts",{"_index":441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/models/user",{"_index":309,"title":{},"body":{"interfaces/UserRegisterInput.html":{},"coverage.html":{}}}],["src/user/password.service.ts",{"_index":216,"title":{},"body":{"injectables/PasswordService.html":{},"coverage.html":{}}}],["src/user/password.service.ts:15",{"_index":244,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/user/password.service.ts:20",{"_index":249,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/user/password.service.ts:31",{"_index":231,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/user/password.service.ts:34",{"_index":240,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/user/user.module.ts",{"_index":305,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":318,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts:17",{"_index":325,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":335,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":329,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:70",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":465,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":468,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":470,"title":{},"body":{"index.html":{}}}],["started",{"_index":448,"title":{"index.html":{}},"body":{}}],["starter",{"_index":458,"title":{},"body":{"index.html":{}}}],["starting",{"_index":267,"title":{},"body":{"injectables/PasswordService.html":{}}}],["statements",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["statuscode",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":493,"title":{},"body":{"index.html":{}}}],["string",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"injectables/PasswordService.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strparam",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(name",{"_index":213,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":484,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":503,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["swaggercustomoptions",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('docs",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":473,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":476,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":472,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":482,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":290,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":299,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.createproviderdetails",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createrandomdigits(digits",{"_index":273,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.createrandomdigits(max",{"_index":272,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.determinerolestoadd(roles",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["this.info(message",{"_index":214,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logger.error(exception",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.setcontext('allexceptionfilter",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.passwordhelper.createpasswordhash(password",{"_index":353,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["throw",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timestamp",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["title",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":330,"title":{},"body":{"injectables/UserService.html":{}}}],["touch",{"_index":494,"title":{},"body":{"index.html":{}}}],["trace",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transaction",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":138,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":445,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvConfig.html":{},"interfaces/LogConfig.html":{},"injectables/LogService.html":{},"injectables/PasswordService.html":{},"injectables/PrismaService.html":{},"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":510,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["typescript",{"_index":295,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["ui",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":471,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["unused",{"_index":297,"title":{},"body":{"injectables/PrismaService.html":{}}}],["usefactory",{"_index":187,"title":{},"body":{"modules/LogModule.html":{}}}],["user",{"_index":344,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":306,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["usermodule",{"_index":116,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userregisterinput",{"_index":308,"title":{"interfaces/UserRegisterInput.html":{}},"body":{"interfaces/UserRegisterInput.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice",{"_index":304,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils.ts",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":338,"title":{},"body":{"injectables/UserService.html":{}}}],["v4",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["valid('development",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatepassword",{"_index":227,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":139,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validationschema",{"_index":136,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validationscheme",{"_index":130,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":243,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":514,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":298,"title":{},"body":{"injectables/PrismaService.html":{}}}],["verbose",{"_index":197,"title":{},"body":{"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"interfaces/EnvConfig.html":{}}}],["void",{"_index":212,"title":{},"body":{"injectables/LogService.html":{}}}],["watch",{"_index":466,"title":{},"body":{"index.html":{}}}],["website",{"_index":498,"title":{},"body":{"index.html":{}}}],["without",{"_index":266,"title":{},"body":{"injectables/PasswordService.html":{}}}],["you'd",{"_index":487,"title":{},"body":{"index.html":{}}}],["zeros",{"_index":270,"title":{},"body":{"injectables/PasswordService.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/LogModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/log/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/core/log/all-exceptions.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/log/all-exceptions.filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { LogService } from './log.service';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly logger: LogService) {\n    this.logger.setContext('AllExceptionFilter');\n  }\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    this.logger.error(exception, `Error ${exception.message}`, exception);\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const pathName =\n      (ctx as any).contextType === 'graphql'\n        ? (ctx as any)?.args[(ctx as any)?.args?.length]?.fieldName ||\n          'graphqlMethod'\n        : request?.url;\n\n    if (typeof response.status === 'function') {\n      const errorObject = (exception as any).response || {\n        statusCode: 500,\n        error: 'Server Exception',\n        message: [(exception as HttpException).message],\n      };\n\n      return response.status(status).json({\n        timestamp: Date.now(),\n        path: pathName,\n        error: errorObject,\n      });\n    } else {\n      throw exception;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFavIcon\n                            \n                            \n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFavIcon\n                        \n                    \n                \n            \n            \n                \ngetFavIcon()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Get('/favicon.ico')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfo\n                        \n                    \n                \n            \n            \n                \ngetInfo(ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ip\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { version: any; env: any; ip: string; date: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus } from '@nestjs/common';\nimport { ApiExcludeEndpoint, ApiTags } from '@nestjs/swagger';\nimport { RealIP } from 'nestjs-real-ip';\n\n@ApiTags('App')\n@Controller()\nexport class AppController {\n  @Get('')\n  getInfo(@RealIP() ip: string) {\n    return {\n      version: process.env.npm_package_version,\n      env: process.env.NODE_ENV,\n      ip,\n      date: new Date().toISOString(),\n    };\n  }\n\n  @ApiExcludeEndpoint()\n  @Get('/favicon.ico')\n  getFavIcon() {\n    return HttpStatus.OK;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { UserModule } from './user/user.module';\nimport { CoreModule } from './core/core.module';\n\n@Module({\n  imports: [UserModule, CoreModule],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule as NestConfigModule } from '@nestjs/config';\nimport validationScheme from './config.scheme';\nimport configuration from './models/configuration';\n\n@Module({\n  imports: [\n    NestConfigModule.forRoot({\n      load: [configuration],\n      validationSchema: validationScheme,\n      isGlobal: true,\n      validationOptions: {\n        abortEarly: true,\n      },\n    }),\n  ],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nCoreModule -->\n\nDataModule->CoreModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nCoreModule -->\n\nLogModule->CoreModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCoreModule->ConfigModule \n\n\n\n\n\nDataModule \n\nDataModule \n\nDataModule  -->\n\nCoreModule->DataModule \n\n\n\n\n\nLogModule \n\nLogModule \n\nLogModule  -->\n\nCoreModule->LogModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from './config/config.module';\nimport { LogModule } from './log/log.module';\nimport { DataModule } from './data/data.module';\n\n@Module({\n  imports: [ConfigModule, LogModule, DataModule],\n  exports: [DataModule, LogModule, ConfigModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DataModule\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nDataModule\n\nDataModule\n\nPrismaService  -->\n\nDataModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDataModule -->\n\nPrismaService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma/prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/config/models/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            databaseUrl\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        databaseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        databaseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatabaseConfig {\n  host: string;\n  port: number;\n  type: string;\n  database: string;\n  databaseUrl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/config/models/env.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            env\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvConfig {\n  port: number;\n  version: string;\n  env: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogConfig.html":{"url":"interfaces/LogConfig.html","title":"interface - LogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/config/models/log.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            autoLogging\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            seqApiKey\n                                        \n                                \n                                \n                                        \n                                            seqServerUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoLogging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoLogging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seqApiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seqApiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seqServerUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seqServerUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogConfig {\n  level: string;\n  seqServerUrl: string;\n  seqApiKey: string;\n  autoLogging: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogModule\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_LogModule_exports\n\n\n\n\nLogService \n\nLogService \n\n\n\nLogModule\n\nLogModule\n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { LoggerModule } from 'nestjs-pino';\nimport { createStream } from 'pino-seq';\nimport { LogConfig } from '../config/models/log.config';\nimport { LogService } from './log.service';\n\n@Module({\n  imports: [\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        const logConfig = config.get('logging');\n        const seqStream = createStream({\n          serverUrl: logConfig.seqServerUrl,\n          apiKey: logConfig.seqApiKey,\n          logOtherAs: 'Verbose',\n        });\n        return {\n          pinoHttp: [\n            {\n              level: logConfig.level,\n              autoLogging: logConfig.autoLogging,\n            },\n            seqStream,\n          ],\n        };\n      },\n    }),\n  ],\n  providers: [LogService],\n  exports: [LogService],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/log/log.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PinoLogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name)\n                    \n                \n                        \n                            \n                                Defined in src/core/log/log.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/log/log.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PinoLogger } from 'nestjs-pino';\n\n@Injectable()\nexport class LogService extends PinoLogger {\n  constructor(name) {\n    super(name);\n  }\n  log(message, ...optionalParams) {\n    this.info(message, optionalParams);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordService.html":{"url":"injectables/PasswordService.html","title":"injectable - PasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/password.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for dealing with passwords and some general crypto functions relating to authentication\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createPasswordHash\n                            \n                            \n                                validatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRandomCode\n                            \n                            \n                                createRandomDigits\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRandomCode\n                        \n                    \n                \n            \n            \n                \ncreateRandomCode(size: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/password.service.ts:31\n                \n            \n\n\n            \n                \n                    Generates a set of random bytes to specified length\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRandomDigits\n                        \n                    \n                \n            \n            \n                \ncreateRandomDigits(digits: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/password.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    digits\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createPasswordHash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/user/password.service.ts:15\n                        \n                    \n\n            \n                \n                    Creates a hash and salt from a password\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    password\n                                                    \n                                                            the password to hash\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/user/password.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\nimport { randomBytes } from 'crypto';\n// import { randomBytes } from 'crypto';\n\n/**\n * Service for dealing with passwords and some general crypto functions relating to authentication\n */\n@Injectable()\nexport class PasswordService {\n  /**\n   * Creates a hash and salt from a password\n   * @param password {string} the password to hash\n   */\n  createPasswordHash = (password: string) => {\n    const salt = bcrypt.genSaltSync(10);\n    const hash = bcrypt.hashSync(`${password}${salt}`, salt);\n    return { salt, hash };\n  };\n  validatePassword = (\n    password: string,\n    hashedPassword: string,\n    salt: string,\n  ) => {\n    return bcrypt.compareSync(`${password}${salt}`, hashedPassword);\n  };\n  /**\n   * Generates a set of random bytes to specified length\n   * @param size\n   */\n  createRandomCode(size: number) {\n    return randomBytes(size).toString('hex');\n  }\n  createRandomDigits(digits: number) {\n    const add = 1;\n    // 12 is the min safe number Math.random() can generate without it starting to pad the end with zeros.\n    let max = 12 - add;\n    if (digits > max) {\n      return (\n        this.createRandomDigits(max) + this.createRandomDigits(digits - max)\n      );\n    }\n\n    max = Math.pow(10, digits + add);\n    const min = max / 10; // Math.pow(10, digits) basically\n    const number = Math.floor(Math.random() * (max - min + 1)) + min;\n\n    return ('' + number).substring(add);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/data/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/core/data/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/data/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nUserModule -->\n\nPasswordService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswordService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoreModule } from '../core/core.module';\nimport { UserService } from './user.service';\nimport { PasswordService } from './password.service';\n\n@Module({\n  imports: [CoreModule],\n  providers: [UserService, PasswordService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInput.html":{"url":"interfaces/UserRegisterInput.html","title":"interface - UserRegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user-register.input.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            origin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRegisterInput {\n  id: any;\n\n  displayName?: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n\n  password?: string;\n\n  origin?: string;\n\n  roles?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProviderDetails\n                            \n                            \n                                determineRolestoAdd\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, passwordHelper: PasswordService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordHelper\n                                                  \n                                                        \n                                                                        PasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProviderDetails\n                        \n                    \n                \n            \n            \n                \ncreateProviderDetails(undefined: ProviderDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ProviderDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { email: any; token: string; provider: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        determineRolestoAdd\n                        \n                    \n                \n            \n            \n                \ndetermineRolestoAdd(roles: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: UserRegisterInput)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserRegisterInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { v4 as uuid } from 'uuid';\nimport { PrismaService } from '../core/data/prisma/prisma.service';\nimport { PROVIDERS } from './models/provider.types';\nimport { UserRegisterInput } from './models/user-register.input';\nimport { PasswordService } from './password.service';\n\nexport type ProviderDetails = {\n  email: string;\n  origin?: string;\n  token: string;\n};\n\nexport const DEFAULT_ROLES = ['User'];\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private prisma: PrismaService,\n    private passwordHelper: PasswordService,\n  ) {}\n\n  public async register({\n    id = uuid(),\n    displayName,\n    firstName,\n    lastName,\n    email,\n    password,\n    origin,\n    roles,\n  }: UserRegisterInput) {\n    const createData = {\n      id: id,\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      email: email.trim().toLowerCase(),\n      password: '',\n      displayName: displayName || `${firstName.trim()} ${lastName.trim()}`,\n      roles: { connect: this.determineRolestoAdd(roles) },\n      providers: { create: [] },\n    };\n\n    const { hash, salt } = this.passwordHelper.createPasswordHash(password);\n\n    // If we have a user from a social provider there will be no password.\n    const providerDetails = this.createProviderDetails({\n      email,\n      origin,\n      token: salt,\n    });\n    createData.password = hash;\n    createData.providers.create.push(providerDetails);\n\n    return await this.prisma.user.create({\n      data: createData,\n    });\n  }\n\n  createProviderDetails({ email, origin, token }: ProviderDetails) {\n    const providerDetails = {\n      email: email.trim().toLowerCase(),\n      token: token,\n      provider: origin ? origin.trim() : PROVIDERS.EMAIL,\n    };\n\n    return providerDetails;\n  }\n\n  determineRolestoAdd(roles: string[]) {\n    const hasValidRoles = (roles) => {\n      return roles && roles.length > 0;\n    };\n    return (hasValidRoles(roles) ? roles : DEFAULT_ROLES).reduce(\n      (previouse, current) => {\n        previouse.push({ name: current });\n        return previouse;\n      },\n      [],\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/__testing__/mocks/log-service.mock.ts\n            \n            variable\n            mockLogService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/__testing__/mocks/password-service.mock.ts\n            \n            variable\n            mockedHashValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/__testing__/mocks/password-service.mock.ts\n            \n            variable\n            mockedSalt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/__testing__/mocks/password-service.mock.ts\n            \n            variable\n            mockPasswordService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/__testing__/mocks/prisma-service.mock.ts\n            \n            variable\n            mockPrismaService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/config/config-utils.ts\n            \n            variable\n            getDataBaseDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/config.scheme.ts\n            \n            variable\n            validationScheme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/models/configuration.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/models/database.config.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/config/models/env.config.ts\n            \n            interface\n            EnvConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/config/models/log.config.ts\n            \n            interface\n            LogConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/data/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/log/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/log/log-utils.ts\n            \n            variable\n            getPinoLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/log/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            appUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            configureLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            configureSwaggerDocumentation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            port\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/models/user-register.input.ts\n            \n            interface\n            UserRegisterInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            DEFAULT_ROLES\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            @nestjs/terminus : ^7.2.0\n        \n            @prisma/client : ^2.29.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv-cli : ^4.0.0\n        \n            joi : ^17.4.2\n        \n            nestjs-pino : ^1.4.0\n        \n            nestjs-real-ip : ^2.0.0\n        \n            pino-seq : ^0.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PROVIDERS   (src/.../provider.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/models/provider.types.ts\n    \n        \n            \n                \n                    \n                        \n                        PROVIDERS\n                    \n                \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : emailAndPassword\n                            \n                        \n                        \n                            \n                                 FACEBOOK\n                            \n                        \n                        \n                            \n                                Value : facebook\n                            \n                        \n                        \n                            \n                                 GOOGLE\n                            \n                        \n                        \n                            \n                                Value : google\n                            \n                        \n                        \n                            \n                                 TWITTER\n                            \n                        \n                        \n                            \n                                Value : twitter\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCoreModule->ConfigModule \n\n\n\n\n\nDataModule \n\nDataModule \n\nDataModule  -->\n\nCoreModule->DataModule \n\n\n\n\n\nLogModule \n\nLogModule \n\nLogModule  -->\n\nCoreModule->LogModule \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nCoreModule -->\n\nDataModule->CoreModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nDataModule->PrismaService \n\n\n\n\n\nLogModule\n\nLogModule\n\nCoreModule -->\n\nLogModule->CoreModule\n\n\n\n\n\nLogService \n\nLogService \n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDataModule -->\n\nPrismaService->DataModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nUserModule -->\n\nPasswordService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProviderDetails   (src/.../user.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    ProviderDetails\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appUrl   (src/.../main.ts)\n                        \n                        \n                            configureLogger   (src/.../main.ts)\n                        \n                        \n                            configureSwaggerDocumentation   (src/.../main.ts)\n                        \n                        \n                            DEFAULT_ROLES   (src/.../user.service.ts)\n                        \n                        \n                            env   (src/.../main.ts)\n                        \n                        \n                            getDataBaseDetails   (src/.../config-utils.ts)\n                        \n                        \n                            getPinoLogger   (src/.../log-utils.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            mockedHashValue   (src/.../password-service.mock.ts)\n                        \n                        \n                            mockedSalt   (src/.../password-service.mock.ts)\n                        \n                        \n                            mockLogService   (src/.../log-service.mock.ts)\n                        \n                        \n                            mockPasswordService   (src/.../password-service.mock.ts)\n                        \n                        \n                            mockPrismaService   (src/.../prisma-service.mock.ts)\n                        \n                        \n                            port   (src/.../main.ts)\n                        \n                        \n                            validationScheme   (src/.../config.scheme.ts)\n                        \n                        \n                               (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appUrl\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (app: INestApplication) => {\n  logger = await app.resolve(LogService);\n  logger.setContext('NESTJS-API');\n  app.useLogger(logger);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwaggerDocumentation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  app: INestApplication,\n  packageDetails,\n  params: { title; description },\n) => {\n  const customOptions: SwaggerCustomOptions = {\n    swaggerOptions: {\n      persistAuthorization: true,\n    },\n    customSiteTitle: params.title,\n  };\n  const config = new DocumentBuilder()\n    .setTitle(packageDetails.name)\n    .setDescription(params.description)\n    .setVersion(packageDetails.version)\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('docs', app, document, customOptions);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        port\n                        \n                    \n                \n            \n\n\n        \n    \n\n    src/user/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['User']\n                    \n                \n\n\n        \n    \n\n    src/core/config/config-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDataBaseDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const databaseUrl = process.env.DATABASE_URL;\n  const type = databaseUrl.split(':')[0];\n  const host = databaseUrl.split(':')[2].split('@')[1];\n  const port = databaseUrl.split(':')[3].split('/')[0];\n  const database = databaseUrl.split(':')[3].split('/')[1].split('?')[0];\n  return { database, databaseUrl, host, port, type };\n}\n                    \n                \n\n\n        \n    \n\n    src/core/log/log-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPinoLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, level = 'trace') => {\n  const seqStream = createStream({\n    serverUrl: process.env.SEQ_SERVER_URL,\n    apiKey: process.env.SEQ_API_KEY,\n    logOtherAs: 'Verbose',\n  });\n\n  return new PinoLogger({\n    pinoHttp: [{ level: level, name: name }, seqStream],\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/__testing__/mocks/password-service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedHashValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '12345678907654regfhytre'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedSalt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '2134567uytrgewq3456'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockPasswordService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  createPasswordHash: (strParam) => {\n    if (strParam) {\n      return { hash: mockedHashValue, salt: mockedSalt };\n    }\n    return { hash: mockedHashValue, salt: mockedSalt };\n  },\n  createRandomCode: jest.fn(),\n  validatePassword: jest.fn(),\n}\n                    \n                \n\n\n        \n    \n\n    src/__testing__/mocks/log-service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockLogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  setContext: jest.fn(),\n  error: jest.fn(),\n}\n                    \n                \n\n\n        \n    \n\n    src/__testing__/mocks/prisma-service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockPrismaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $transaction: jest.fn(),\n  user: {\n    create: jest.fn(),\n    createMany: jest.fn(),\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/core/config/config.scheme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationScheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string()\n    .valid('development', 'production', 'test', 'local')\n    .default('local'),\n  PORT: Joi.number().default(80),\n  LOG_LEVEL: Joi.string().default('trace'),\n  AUTO_LOGGING: Joi.boolean().default(true),\n  SEQ_SERVER_URL: Joi.string().default('http://localhost:5341'),\n  SEQ_API_KEY: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    src/core/config/models/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : getDataBaseDetails()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
